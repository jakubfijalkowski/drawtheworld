<UserControl
	x:Class="DrawTheWorld.Game.Controls.Toolbox.Display"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="using:DrawTheWorld.Game.Controls"
	xmlns:toolbox="using:DrawTheWorld.Game.Controls.Toolbox"
	x:Name="Root" HorizontalAlignment="Center" VerticalAlignment="Center">

	<UserControl.Resources>

		<Thickness x:Key="BaseMarginForEntrySize">16,17,16,16</Thickness>
		<x:Double x:Key="ToolboxEntryNotSelectedOffset">20</x:Double>

		<Style x:Key="ToolToolTipTextStyle" TargetType="local:TextBlockWithShadow">
			<Setter Property="Margin" Value="5" />
			<Setter Property="VerticalAlignment" Value="Center" />
			<Setter Property="HorizontalAlignment" Value="Center" />

			<Setter Property="FontWeight" Value="Normal" />
			<Setter Property="FontFamily" Value="/Assets/Fonts/Jura/Jura-Regular.ttf#Jura" />
			<Setter Property="FontSize" Value="12" />

			<Setter Property="Foreground" Value="#FF476B99" />
			<Setter Property="ShadowBrush" Value="White" />
		</Style>

		<Style TargetType="ToolTip">
			<Setter Property="MinWidth" Value="80" />

			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ToolTip">
						<Grid x:Name="LayoutRoot">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="OpenStates">
									<VisualState x:Name="Closed">
										<Storyboard>
											<FadeOutThemeAnimation TargetName="LayoutRoot" />
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Opened">
										<Storyboard>
											<FadeInThemeAnimation TargetName="LayoutRoot" />
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>

							<Rectangle Fill="#CFFFFFFF" RadiusX="10" RadiusY="10" />
							<Image Source="/Assets/Images/Popups/ToolTip.png" NineGrid="10" Stretch="Fill" />
							<local:TextBlockWithShadow Text="{TemplateBinding Content}" Style="{StaticResource ToolToolTipTextStyle}" />
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style TargetType="toolbox:SelectableControl">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="toolbox:SelectableControl">
						<Viewbox ToolTipService.Placement="Right" ToolTipService.ToolTip="{Binding Name, Mode=OneTime}">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualStateGroup.Transitions>
										<VisualTransition From="Normal" To="PointerOver">
											<Storyboard>
												<DoubleAnimation Duration="0:0:0.5" From="-0.3" To="1.0" Storyboard.TargetName="FirstStop" Storyboard.TargetProperty="Offset" EnableDependentAnimation="True" />
												<DoubleAnimation Duration="0:0:0.5" From="0.0" To="1.3" Storyboard.TargetName="SecondSecond" Storyboard.TargetProperty="Offset" EnableDependentAnimation="True" />
												<DoubleAnimation Duration="0:0:0.5" From="0.3" To="1.6" Storyboard.TargetName="ThirdSecond" Storyboard.TargetProperty="Offset" EnableDependentAnimation="True" />
											</Storyboard>
										</VisualTransition>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Normal" />
									<VisualState x:Name="PointerOver" />
									<VisualState x:Name="Pressed">
										<Storyboard>
											<DoubleAnimation To="0.7" Duration="0:0:0.1" Storyboard.TargetName="PressedBackground" Storyboard.TargetProperty="Opacity" />
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="SelectionStates">
									<VisualState x:Name="Selected">
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.2" To="0.7" Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" />
										</Storyboard>
									</VisualState>
									<VisualState x:Name="SelectedSwiping">
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.2" To="0.7" Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" />
										</Storyboard>
									</VisualState>
									<VisualState x:Name="SelectedUnfocused">
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.2" To="0.7" Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" />
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Unselected">
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" />
										</Storyboard>
									</VisualState>
									<VisualState x:Name="UnselectedSwiping">
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" />
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Grid Width="181" Height="186">
								<Grid x:Name="SelectedBackground" Margin="{StaticResource BaseMarginForEntrySize}" Opacity="0">
									<Rectangle RadiusX="21" RadiusY="21">
										<Rectangle.Fill>
											<LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
												<GradientStop Offset="0" Color="White" />
												<GradientStop Offset="0.3" Color="Transparent" />
											</LinearGradientBrush>
										</Rectangle.Fill>
									</Rectangle>
									<Rectangle RadiusX="21" RadiusY="21">
										<Rectangle.Fill>
											<LinearGradientBrush StartPoint="1,0" EndPoint="0,0">
												<GradientStop Offset="0" Color="White" />
												<GradientStop Offset="0.3" Color="Transparent" />
											</LinearGradientBrush>
										</Rectangle.Fill>
									</Rectangle>
									<Rectangle RadiusX="21" RadiusY="21">
										<Rectangle.Fill>
											<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
												<GradientStop Offset="0" Color="White" />
												<GradientStop Offset="0.3" Color="Transparent" />
											</LinearGradientBrush>
										</Rectangle.Fill>
									</Rectangle>
									<Rectangle RadiusX="21" RadiusY="21">
										<Rectangle.Fill>
											<LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
												<GradientStop Offset="0" Color="White" />
												<GradientStop Offset="0.3" Color="Transparent" />
											</LinearGradientBrush>
										</Rectangle.Fill>
									</Rectangle>
								</Grid>
								<Grid x:Name="PressedBackground" Margin="{StaticResource BaseMarginForEntrySize}" Opacity="0">
									<Rectangle RadiusX="21" RadiusY="21">
										<Rectangle.Fill>
											<LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
												<GradientStop Offset="0" Color="White" />
												<GradientStop Offset="0.3" Color="Transparent" />
											</LinearGradientBrush>
										</Rectangle.Fill>
									</Rectangle>
									<Rectangle RadiusX="21" RadiusY="21">
										<Rectangle.Fill>
											<LinearGradientBrush StartPoint="1,0" EndPoint="0,0">
												<GradientStop Offset="0" Color="White" />
												<GradientStop Offset="0.3" Color="Transparent" />
											</LinearGradientBrush>
										</Rectangle.Fill>
									</Rectangle>
									<Rectangle RadiusX="21" RadiusY="21">
										<Rectangle.Fill>
											<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
												<GradientStop Offset="0" Color="White" />
												<GradientStop Offset="0.3" Color="Transparent" />
											</LinearGradientBrush>
										</Rectangle.Fill>
									</Rectangle>
									<Rectangle RadiusX="21" RadiusY="21">
										<Rectangle.Fill>
											<LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
												<GradientStop Offset="0" Color="White" />
												<GradientStop Offset="0.3" Color="Transparent" />
											</LinearGradientBrush>
										</Rectangle.Fill>
									</Rectangle>
								</Grid>
								<Rectangle RadiusX="21" RadiusY="21" Margin="{StaticResource BaseMarginForEntrySize}">
									<Rectangle.Fill>
										<LinearGradientBrush StartPoint="1,0" EndPoint="0,1">
											<GradientStop x:Name="FirstStop" Offset="1" Color="Transparent" />
											<GradientStop x:Name="SecondSecond" Offset="1.3" Color="#B2FFFFFF" />
											<GradientStop x:Name="ThirdSecond" Offset="1.6" Color="Transparent" />
										</LinearGradientBrush>
									</Rectangle.Fill>
								</Rectangle>
								<Image Source="{Binding Look, Mode=OneTime}" Stretch="None" />
							</Grid>
						</Viewbox>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Name="HorizontalItemStyle" TargetType="ListViewItem">
			<Setter Property="VerticalAlignment" Value="Center" />
			<Setter Property="HorizontalAlignment" Value="Center" />
			<Setter Property="Margin" Value="0" />
			<Setter Property="Padding" Value="0" />
			<Setter Property="Width" Value="150" />
			<Setter Property="Height" Value="164" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ListViewItem">
						<Canvas>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="SelectionStates">
									<VisualState x:Name="Selected">
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.1" To="{StaticResource ToolboxEntryNotSelectedOffset}" Storyboard.TargetName="Content" Storyboard.TargetProperty="(Canvas.Top)" />
										</Storyboard>
									</VisualState>
									<VisualState x:Name="PressedSelected">
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.1" To="{StaticResource ToolboxEntryNotSelectedOffset}" Storyboard.TargetName="Content" Storyboard.TargetProperty="(Canvas.Top)" />
										</Storyboard>
									</VisualState>
									<VisualState x:Name="PointerOverSelected">
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.1" To="{StaticResource ToolboxEntryNotSelectedOffset}" Storyboard.TargetName="Content" Storyboard.TargetProperty="(Canvas.Top)" />
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Normal">
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.1" To="0.0" Storyboard.TargetName="Content" Storyboard.TargetProperty="(Canvas.Top)" />
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<toolbox:SelectableControl x:Name="Content" IsSelected="{TemplateBinding IsSelected}" Width="{TemplateBinding Width}" Canvas.Top="0" />
						</Canvas>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Name="VerticalItemStyle" TargetType="ListViewItem">
			<Setter Property="VerticalAlignment" Value="Center" />
			<Setter Property="HorizontalAlignment" Value="Center" />
			<Setter Property="Margin" Value="0" />
			<Setter Property="Padding" Value="0" />
			<Setter Property="Width" Value="160" />
			<Setter Property="Height" Value="154" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ListViewItem">
                        <Canvas>
                            <VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="SelectionStates">
									<VisualState x:Name="Selected">
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.1" To="{StaticResource ToolboxEntryNotSelectedOffset}" Storyboard.TargetName="Content" Storyboard.TargetProperty="(Canvas.Left)" />
										</Storyboard>
									</VisualState>
									<VisualState x:Name="PressedSelected">
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.1" To="{StaticResource ToolboxEntryNotSelectedOffset}" Storyboard.TargetName="Content" Storyboard.TargetProperty="(Canvas.Left)" />
										</Storyboard>
									</VisualState>
									<VisualState x:Name="PointerOverSelected">
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.1" To="{StaticResource ToolboxEntryNotSelectedOffset}" Storyboard.TargetName="Content" Storyboard.TargetProperty="(Canvas.Left)" />
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Normal">
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.1" To="0.0" Storyboard.TargetName="Content" Storyboard.TargetProperty="(Canvas.Left)" />
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<toolbox:SelectableControl x:Name="Content" IsSelected="{TemplateBinding IsSelected}" Height="{TemplateBinding Height}" Canvas.Left="0" />
						</Canvas>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style TargetType="ScrollViewer" BasedOn="{StaticResource ScrollViewerLeftTopBar}" />
        <Style x:Key="ListViewItemContainerStyle1" TargetType="ListViewItem">
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="Background" Value="{ThemeResource ListViewItemBackground}"/>
            <Setter Property="Foreground" Value="{ThemeResource ListViewItemForeground}"/>
            <Setter Property="TabNavigation" Value="Local"/>
            <Setter Property="IsHoldingEnabled" Value="True"/>
            <Setter Property="Padding" Value="12,0,12,0"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}"/>
            <Setter Property="MinHeight" Value="{ThemeResource ListViewItemMinHeight}"/>
            <Setter Property="AllowDrop" Value="False"/>
            <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
            <Setter Property="FocusVisualMargin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <ListViewItemPresenter x:Name="Root" CheckBrush="{ThemeResource ListViewItemCheckBrush}" ContentMargin="{TemplateBinding Padding}" CheckBoxBrush="{ThemeResource ListViewItemCheckBoxBrush}" ContentTransitions="{TemplateBinding ContentTransitions}" CheckMode="{ThemeResource ListViewItemCheckMode}" DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}" DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}" DragBackground="{ThemeResource ListViewItemDragBackground}" DragForeground="{ThemeResource ListViewItemDragForeground}" FocusBorderBrush="{ThemeResource ListViewItemFocusBorderBrush}" FocusVisualMargin="{TemplateBinding FocusVisualMargin}" FocusSecondaryBorderBrush="{ThemeResource ListViewItemFocusSecondaryBorderBrush}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Control.IsTemplateFocusTarget="True" PressedBackground="{ThemeResource ListViewItemBackgroundPressed}" PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackground}" PointerOverForeground="{ThemeResource ListViewItemForegroundPointerOver}" PointerOverBackground="{ThemeResource ListViewItemBackgroundPointerOver}" RevealBorderThickness="{ThemeResource ListViewItemRevealBorderThemeThickness}" ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" RevealBorderBrush="{ThemeResource ListViewItemRevealBorderBrush}" RevealBackground="{ThemeResource ListViewItemRevealBackground}" SelectedForeground="{ThemeResource ListViewItemForegroundSelected}" SelectionCheckMarkVisualEnabled="{ThemeResource ListViewItemSelectionCheckMarkVisualEnabled}" SelectedBackground="{ThemeResource ListViewItemBackgroundSelected}" SelectedPressedBackground="{ThemeResource ListViewItemBackgroundSelectedPressed}" SelectedPointerOverBackground="{ThemeResource ListViewItemBackgroundSelectedPointerOver}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Selected"/>
                                    <VisualState x:Name="PointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="PointerOver"/>
                                            <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPointerOver}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PointerOverSelected">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="PointerOver"/>
                                            <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPointerOver}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PointerOverPressed">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                            <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPressed}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                            <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPressed}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PressedSelected">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                            <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPressed}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DisabledStates">
                                    <VisualState x:Name="Enabled"/>
                                    <VisualState x:Name="Disabled">
                                        <VisualState.Setters>
                                            <Setter Target="Root.RevealBorderThickness" Value="0"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </ListViewItemPresenter>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

	</UserControl.Resources>

	<ListView ItemContainerStyle="{StaticResource ListViewItemContainerStyle1}" x:Name="Items" IsSwipeEnabled="False">
		
		<ListView.ItemContainerTransitions>
			<TransitionCollection>
				<EdgeUIThemeTransition x:Name="ListTransition" Edge="Left" />
			</TransitionCollection>
		</ListView.ItemContainerTransitions>
			
		<ListView.ItemsPanel>
			<ItemsPanelTemplate>
				<StackPanel Orientation="{Binding Orientation, ElementName=Root}" />
			</ItemsPanelTemplate>
		</ListView.ItemsPanel>
	</ListView>

</UserControl>
